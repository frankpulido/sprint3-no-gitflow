<?php
declare (strict_types=1);
require_once "task_kind.class.php";
require_once "task.class.php";

final class Programmer {
    //private static int $id_count = 0;
    protected int $id_programmer;
    protected string $programmer_name;
    protected array $skills; // Array of objects class TaskKind (SET column in MySQL)

    public function __construct(string $programmer_name, array $skills) {
        //self::$id_count++;
        //$this->id_programmer = self::$id_count;
        // $id_programmer will be generated by TaskManager class
        $this->programmer_name = $programmer_name;
        $this->skills = $skills;
    }

    // Getters

    public function getIdProgrammer() : int {
        return $this->id_programmer;
    }

    public function getProgrammerName() : string {
        return $this->programmer_name;
    }

    public function getSkills() : array {
        return $this->skills;
    }

    // Setters

    public function setIdProgrammer(int $id_programmer) : void { // This set function will be call by CREATE method in TaskManager class
        $this->id_programmer = $id_programmer;
    }

    public function setProgrammerName(string $programmer_name) : void {
        $this->programmer_name = $programmer_name;
    }

    public function setSkills(array $skills) : void {
        $this->skills = $skills;
    }

    
    // Serialize object to push it into the json persistence file

    public function toArray(): array {
        return [
            'id_programmer' => $this->id_programmer,
            'programmer_name' => $this->programmer_name,
            'skills' => array_map(fn($skill) => $skill->value, $this->skills), // access the value property of the enum class TaskKind
            //'skills' => array_map(fn($skill) => $skill->toArray(), $this->skills), // Assuming TaskKind also has a toArray method
        ];
    }

    /*
    public function getTasks() {
        // Logic to retrieve tasks for this programmer
        return Task::getByProgrammerId($this->id_programmer); // Assuming Task has this method
    }
    */
}
?>